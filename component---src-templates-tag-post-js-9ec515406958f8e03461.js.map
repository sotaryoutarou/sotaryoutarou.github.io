{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/row-posts.js","webpack://gatsby-starter-blog/./src/templates/tag-post.js","webpack://gatsby-starter-blog/./src/styles/post.module.css"],"names":["posts","map","post","index","columnContainerStyle","PostStyles","className","key","fields","slug","Link","to","fluid","frontmatter","hero","childImageSharp","imgStyle","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","date","excerpt","data","pageContext","location","siteTitle","tag","allMarkdownRemark","nodes","node","Math","floor","push","title","type","posts__container","post__link","more__text__content","text__container","column__l__container","column__r__container"],"mappings":"2KAoDA,IA9CiB,SAAC,GAAD,SAAGA,MACZC,KAAI,SAAEC,EAAMC,GAChB,IAAIC,EAOJ,OALEA,EADY,IAAVD,EACqBE,KAEAA,KAIrB,uBAAKC,UAAWF,GACd,2BAASG,IAAKL,EAAKM,OAAOC,MACxB,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKM,OAAOC,MACpB,gBAAC,IAAD,CACEG,MAAOV,EAAKW,YAAYC,KAAKC,gBAAgBH,MAC7CI,SAAU,CACRC,UAAU,EACVC,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,YAAa,OACbC,cAAe,GACfC,aAAc,OAIpB,uBAAKjB,UAAWD,MACd,6BAAQH,EAAKW,YAAYW,MACzB,+BACE,gBAAC,EAAAd,KAAD,CAAMC,GAAIT,EAAKM,OAAOC,KAAMH,UAAWD,MACrC,yBAAIH,EAAKuB,UAEX,uBAAKnB,UAAWD,MACd,gBAAC,EAAAK,KAAD,CACEC,GAAIT,EAAKM,OAAOC,KAChBH,UAAWD,MAFb,mB,+FCHlB,UA3BwB,SAAC,GAAqC,IAAnCqB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGtCC,EAAY,cADFF,EAARG,IAEJ9B,EAAQ,GAOZ,OALA0B,EAAKK,kBAAkBC,MAAM/B,KAAI,SAAEgC,EAAM9B,GAEvC,OADIA,EAAM,GAAM,IAAGH,EAAMkC,KAAKC,MAAMhC,EAAM,IAAI,IACvCH,EAAMkC,KAAKC,MAAMhC,EAAM,IAAIiC,KAAKH,MAIvC,2BACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUS,MAAOR,GACjC,gBAAC,IAAD,CAAKQ,MAAOR,EAAWS,KAAK,YAC3BtC,EAAMC,KAAI,SAAE+B,GACX,OACE,uBAAK1B,UAAWD,MACd,gBAAC,IAAD,CAAUL,MAAOgC,Y,2LCxBxB,IAAIO,EAAmB,uCAEnBC,EAAa,iCACbC,EAAsB,0CACtBC,EAAkB,sCAClBC,EAAuB,2CACvBC,EAAuB","file":"component---src-templates-tag-post-js-9ec515406958f8e03461.js","sourcesContent":["import React from 'react'\nimport * as PostStyles from '../styles/post.module.css'\nimport Image from \"gatsby-image\";\nimport { Link } from \"gatsby\"\n\n// 画像ファイルパスをプロパティに取るようなコンポーネントを定義\nconst rowPosts = ({ posts }) => (\n  posts.map(( post, index ) => {\n    let columnContainerStyle;\n    if (index === 0) {\n      columnContainerStyle = PostStyles.column__l__container\n    } else {\n      columnContainerStyle = PostStyles.column__r__container\n    }\n\n    return (\n        <div className={columnContainerStyle}>\n          <article key={post.fields.slug}>\n            <Link to={post.fields.slug}>\n              <Image\n                fluid={post.frontmatter.hero.childImageSharp.fluid}\n                imgStyle={{\n                  elevation:4,\n                  shadowOffset: { width: 5, height: 5 },\n                  shadowColor: \"grey\",\n                  shadowOpacity: 0.5,\n                  shadowRadius: 10,\n                }}\n              />\n            </Link>\n            <div className={PostStyles.text__container}>\n              <small>{post.frontmatter.date}</small>\n              <section>\n                <Link to={post.fields.slug} className={PostStyles.post__link}>\n                  <p>{post.excerpt}</p>\n                </Link>\n                <div className={PostStyles.more__text__content}>\n                  <Link \n                    to={post.fields.slug}\n                    className={PostStyles.post__link}\n                  >\n                    続きを読む\n                  </Link>\n                </div>\n              </section>\n            </div>\n          </article>\n        </div>\n    );\n  })\n)\n\nexport default rowPosts\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as PostStyles from '../styles/post.module.css'\nimport RowPosts from \"../components/row-posts\"\n\nconst TagPostTemplate = ({ data, pageContext, location }) => {\n\n  const { tag } = pageContext\n  const siteTitle = 'ソタのほほん地下貯蔵庫' + tag\n  var posts = []\n\n  data.allMarkdownRemark.nodes.map(( node, index ) => {\n    if (index%2 === 0){posts[Math.floor(index/2)]=[]}\n    return posts[Math.floor(index/2)].push(node)\n  })\n\n  return (\n    <div>\n      <Layout location={location} title={siteTitle}>\n        <Seo title={siteTitle} type='website' />\n        {posts.map(( nodes ) => {\n          return (\n            <div className={PostStyles.posts__container}>\n              <RowPosts posts={nodes}/>\n            </div>\n          )\n        })}\n      </Layout>\n    </div>\n  )\n}\n\nexport default TagPostTemplate\n\nexport const pageQuery = graphql`\n  query TagTemplate($tag: String!) {\n        allMarkdownRemark(\n          limit: 2000\n          filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            nodes {\n                excerpt(truncate: true)\n                fields {\n                  slug\n                }\n                frontmatter {\n                  date(formatString: \"YYYY-MM-DD\")\n                  title\n                  description\n                  hero {\n                    childImageSharp {\n                      fluid(maxWidth: 1280) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n            }\n        }\n    }\n`\n","// extracted by mini-css-extract-plugin\nexport var posts__container = \"post-module--posts__container--1Ndsd\";\nexport var title__content = \"post-module--title__content--2Wa1K\";\nexport var post__link = \"post-module--post__link--2n1_o\";\nexport var more__text__content = \"post-module--more__text__content--h64Rg\";\nexport var text__container = \"post-module--text__container--gc0BY\";\nexport var column__l__container = \"post-module--column__l__container--3JKWW\";\nexport var column__r__container = \"post-module--column__r__container--3X7kh\";"],"sourceRoot":""}